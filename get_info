#!/usr/bin/python
# -*- Mode: python; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4; coding: utf-8 -*-
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details:
#
# Copyright (C) 2013 Davide Depau <david.dep.1996@gmail.com>
#

import sys, dbus

DBUS_INTERFACE_PROPERTIES='org.freedesktop.DBus.Properties'
MM_DBUS_SERVICE='org.freedesktop.ModemManager'
MM_DBUS_PATH='/org/freedesktop/ModemManager'
MM_DBUS_INTERFACE='org.freedesktop.ModemManager'
MM_DBUS_INTERFACE_MODEM='org.freedesktop.ModemManager.Modem'
MM_DBUS_INTERFACE_MODEM_CDMA='org.freedesktop.ModemManager.Modem.Cdma'
MM_DBUS_INTERFACE_MODEM_GSM_CARD='org.freedesktop.ModemManager.Modem.Gsm.Card'
MM_DBUS_INTERFACE_MODEM_GSM_NETWORK='org.freedesktop.ModemManager.Modem.Gsm.Network'

mm_reg = ["inattivo",
          "propria rete",
          "ricerca",
          "non permesso",
          "sconosciuto",
          "in roaming"]

mm_act = ["",
          "GSM",
          "GSM",
          "2G GPRS",
          "2G EDGE",
          "3G UMTS",
          "3G HSDPA",
          "3G HSUPA",
          "3G HSPA"]

def cdma_inspect(proxy, props):
    cdma = dbus.Interface(proxy, dbus_interface=MM_DBUS_INTERFACE_MODEM_CDMA)
    try:
        quality = int(cdma.GetSignalQuality())
        chars = (int(round(quality * 10.0 / 100.0)))
        quality_graph = "\xe2\x96\x88" * chars
        quality_graph = quality_graph + "\xe2\x96\x92" * (10 - chars)
    except dbus.exceptions.DBusException, e:
        quality_graph = "\xe2\x96\x92" * 8
    quality_graph = '\xe2\x87\x85 ' + quality_graph
    return quality_graph


def gsm_inspect(proxy, props):
    net = dbus.Interface(proxy, dbus_interface=MM_DBUS_INTERFACE_MODEM_GSM_NETWORK)
    try:
        quality = int(net.GetSignalQuality())
        quality_graph = "\xe2\x96\x88" * (int(round(quality * 8.0 / 100.0)))
        quality_graph = quality_graph + "\xe2\x96\x92" * (8 - len(quality_graph))
    except dbus.exceptions.DBusException, e:
        quality_graph = "\xe2\x96\x92" * 8
    quality_graph = '\xe2\x87\x85 ' + quality_graph

    try:
        reg = net.GetRegistrationInfo()
        status = mm_reg[int(reg[0])]
        reg_string = reg[2]
    except dbus.exceptions.DBusException, e:
        status = "sconosciuto"
        reg_string = "Non connesso"

    try:
        act = props.Get(MM_DBUS_INTERFACE_MODEM_GSM_NETWORK, "AccessTechnology")
        act_string = mm_act[act]
    except dbus.exceptions.DBusException, e:
        act_string = ""
    try:
        if sys.argv[2] == "--kde" or sys.argv[1] == "-k":
            return "{0} • {1} {2}".format(reg_string, quality_graph, act_string)
        else:
            return "{0}\t•\t{1}\t{2}".format(reg_string, quality_graph, act_string)
    except IndexError:
            return "{0}\t•\t{1}\t{2}".format(reg_string, quality_graph, act_string)

bus = dbus.SystemBus()
objpath = sys.argv[1]
if objpath[:1] != '/':
    objpath = "/org/freedesktop/ModemManager/Modems/%s" % str(objpath)

proxy = bus.get_object(MM_DBUS_SERVICE, objpath)
props = dbus.Interface(proxy, dbus_interface='org.freedesktop.DBus.Properties')
mtype = props.Get(MM_DBUS_INTERFACE_MODEM, 'Type')

if mtype == 1:
    print gsm_inspect(proxy, props)
elif mtype == 2:
    print cdma_inspect(proxy, props)
