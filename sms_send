#!/usr/bin/python
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details:
#
# Copyright (C) 2009 Novell, Inc.
#

# An example on how to send an SMS message using ModemManager

import sys
import dbus
import os

MM_DBUS_SERVICE='org.freedesktop.ModemManager'
MM_DBUS_INTERFACE_USSD='org.freedesktop.ModemManager.Modem.Gsm.Ussd'

arglen = len(sys.argv)
if arglen != 6 and arglen != 8 and arglen != 10 and arglen != 12:
    print "Usage: %s --number <number> --modem <modem> [--smsc <smsc>] [--type {normal,flash}] [--validity <minutes>] <message>" % sys.argv[0]
    sys.exit(1)

number = None
validity = None
smsc = None
message = None
mtype = "normal"
x = 1
while x < arglen - 1:
    if sys.argv[x] == "--number":
        x += 1
        number = sys.argv[x].strip()
    elif sys.argv[x] == "--modem":
        x += 1
        objpath = sys.argv[x].strip()
    elif sys.argv[x] == "--validity":
        x += 1
        validity = int(sys.argv[x])
    elif sys.argv[x] == "--type":
        x += 1
        mtype = sys.argv[x]
        if not mtype in ("normal", "flash"):
            print "Usage: %s --number <number> --modem <modem> [--smsc <smsc>] [--type {normal,flash}] [--validity <minutes>] <message>" % sys.argv[0]
            raise ValueError("--type argument must be followed either by \"normal\" or \"flash\"")
    elif sys.argv[x] == "--smsc":
        x += 1
        smsc = sys.argv[x].strip()
    else:
        print "Usage: %s --number <number> --modem <modem> [--smsc <smsc>] [--type {normal,flash}] [--validity <minutes>] <message>" % sys.argv[0]
        raise ValueError("Unknown option '%s'" % sys.argv[x])
    x += 1

try:
    lang = os.getenv("LANG")
    idx = lang.find(".")
    if idx != -1:
        lang = lang[idx + 1:]
except KeyError:
    lang = "utf-8"
message = unicode(sys.argv[arglen - 1], "utf-8")


bus = dbus.SystemBus()

if objpath[:1] != '/':
    objpath = "/org/freedesktop/ModemManager/Modems/" + str(objpath)
proxy = bus.get_object(MM_DBUS_SERVICE, objpath)
modem = dbus.Interface(proxy, dbus_interface='org.freedesktop.ModemManager.Modem')
modem.Enable(True)

msg_dict = dbus.Dictionary(
    {
        dbus.String('number') : dbus.String(number),
        dbus.String('text') : dbus.String(message)
    },
    signature=dbus.Signature("sv")
)

if smsc:
    msg_dict[dbus.String('smsc')] = dbus.String(smsc)

if validity:
    msg_dict[dbus.String('validity')] = dbus.UInt32(validity)

#if mtype == "flash":
    # Flash SMS  --> class 0
    # Normal SMS --> class 1
#    msg_dict[dbus.String('class')] = dbus.UInt32(4)

print msg_dict

sms_iface = dbus.Interface(proxy, dbus_interface='org.freedesktop.ModemManager.Modem.Gsm.SMS')
try:
    indexes = sms_iface.Send(msg_dict)
    print "Message index: %d" % indexes[0]
except Exception, e:
    print "Sending message failed: %s" % e
    sys.exit(2)
